// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: T7Messages.proto

#ifndef PROTOBUF_T7Messages_2eproto__INCLUDED
#define PROTOBUF_T7Messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace T7 {
class Accel;
class AccelDefaultTypeInternal;
extern AccelDefaultTypeInternal _Accel_default_instance_;
class Altitude;
class AltitudeDefaultTypeInternal;
extern AltitudeDefaultTypeInternal _Altitude_default_instance_;
class Attitude;
class AttitudeDefaultTypeInternal;
extern AttitudeDefaultTypeInternal _Attitude_default_instance_;
class Battery;
class BatteryDefaultTypeInternal;
extern BatteryDefaultTypeInternal _Battery_default_instance_;
class ConfigData;
class ConfigDataDefaultTypeInternal;
extern ConfigDataDefaultTypeInternal _ConfigData_default_instance_;
class GenericMessage;
class GenericMessageDefaultTypeInternal;
extern GenericMessageDefaultTypeInternal _GenericMessage_default_instance_;
class Gyro;
class GyroDefaultTypeInternal;
extern GyroDefaultTypeInternal _Gyro_default_instance_;
class Heading;
class HeadingDefaultTypeInternal;
extern HeadingDefaultTypeInternal _Heading_default_instance_;
class HeartBeat;
class HeartBeatDefaultTypeInternal;
extern HeartBeatDefaultTypeInternal _HeartBeat_default_instance_;
class MoveCamera;
class MoveCameraDefaultTypeInternal;
extern MoveCameraDefaultTypeInternal _MoveCamera_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Temp;
class TempDefaultTypeInternal;
extern TempDefaultTypeInternal _Temp_default_instance_;
class Terminate;
class TerminateDefaultTypeInternal;
extern TerminateDefaultTypeInternal _Terminate_default_instance_;
class ThermalRequest;
class ThermalRequestDefaultTypeInternal;
extern ThermalRequestDefaultTypeInternal _ThermalRequest_default_instance_;
class ThermalResponse;
class ThermalResponseDefaultTypeInternal;
extern ThermalResponseDefaultTypeInternal _ThermalResponse_default_instance_;
class WiFi;
class WiFiDefaultTypeInternal;
extern WiFiDefaultTypeInternal _WiFi_default_instance_;
}  // namespace T7

namespace T7 {

namespace protobuf_T7Messages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_T7Messages_2eproto

enum GenericMessage_MsgType {
  GenericMessage_MsgType_RESPONSE = 0,
  GenericMessage_MsgType_HEARTBEAT = 1,
  GenericMessage_MsgType_TERMINATE = 2,
  GenericMessage_MsgType_CONFIG_DATA = 101,
  GenericMessage_MsgType_MOVE_CAMERA = 102,
  GenericMessage_MsgType_THERMAL_REQUEST = 103,
  GenericMessage_MsgType_ACCEL = 200,
  GenericMessage_MsgType_GYRO = 201,
  GenericMessage_MsgType_ALTITUDE = 202,
  GenericMessage_MsgType_ATTITUDE = 203,
  GenericMessage_MsgType_TEMP = 204,
  GenericMessage_MsgType_BAT = 205,
  GenericMessage_MsgType_HEAD = 206,
  GenericMessage_MsgType_THERMAL_RESPONSE = 207,
  GenericMessage_MsgType_WIFI = 208,
  GenericMessage_MsgType_GenericMessage_MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GenericMessage_MsgType_GenericMessage_MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GenericMessage_MsgType_IsValid(int value);
const GenericMessage_MsgType GenericMessage_MsgType_MsgType_MIN = GenericMessage_MsgType_RESPONSE;
const GenericMessage_MsgType GenericMessage_MsgType_MsgType_MAX = GenericMessage_MsgType_WIFI;
const int GenericMessage_MsgType_MsgType_ARRAYSIZE = GenericMessage_MsgType_MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GenericMessage_MsgType_descriptor();
inline const ::std::string& GenericMessage_MsgType_Name(GenericMessage_MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GenericMessage_MsgType_descriptor(), value);
}
inline bool GenericMessage_MsgType_Parse(
    const ::std::string& name, GenericMessage_MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GenericMessage_MsgType>(
    GenericMessage_MsgType_descriptor(), name, value);
}
enum Terminate_TerminateKeys {
  Terminate_TerminateKeys_selfTerminate = 0,
  Terminate_TerminateKeys_softShutdown = 1,
  Terminate_TerminateKeys_emergencyStop = 2,
  Terminate_TerminateKeys_Terminate_TerminateKeys_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Terminate_TerminateKeys_Terminate_TerminateKeys_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Terminate_TerminateKeys_IsValid(int value);
const Terminate_TerminateKeys Terminate_TerminateKeys_TerminateKeys_MIN = Terminate_TerminateKeys_selfTerminate;
const Terminate_TerminateKeys Terminate_TerminateKeys_TerminateKeys_MAX = Terminate_TerminateKeys_emergencyStop;
const int Terminate_TerminateKeys_TerminateKeys_ARRAYSIZE = Terminate_TerminateKeys_TerminateKeys_MAX + 1;

const ::google::protobuf::EnumDescriptor* Terminate_TerminateKeys_descriptor();
inline const ::std::string& Terminate_TerminateKeys_Name(Terminate_TerminateKeys value) {
  return ::google::protobuf::internal::NameOfEnum(
    Terminate_TerminateKeys_descriptor(), value);
}
inline bool Terminate_TerminateKeys_Parse(
    const ::std::string& name, Terminate_TerminateKeys* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Terminate_TerminateKeys>(
    Terminate_TerminateKeys_descriptor(), name, value);
}
enum ConfigData_ToggleKeys {
  ConfigData_ToggleKeys_toggleAccel = 0,
  ConfigData_ToggleKeys_toggleGyro = 1,
  ConfigData_ToggleKeys_toggleAltitude = 2,
  ConfigData_ToggleKeys_toggleAttitude = 3,
  ConfigData_ToggleKeys_toggleTemp = 4,
  ConfigData_ToggleKeys_toggleBat = 5,
  ConfigData_ToggleKeys_toggleArray = 6,
  ConfigData_ToggleKeys_toggleHead = 7,
  ConfigData_ToggleKeys_toggleWifi = 8,
  ConfigData_ToggleKeys_ConfigData_ToggleKeys_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfigData_ToggleKeys_ConfigData_ToggleKeys_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfigData_ToggleKeys_IsValid(int value);
const ConfigData_ToggleKeys ConfigData_ToggleKeys_ToggleKeys_MIN = ConfigData_ToggleKeys_toggleAccel;
const ConfigData_ToggleKeys ConfigData_ToggleKeys_ToggleKeys_MAX = ConfigData_ToggleKeys_toggleWifi;
const int ConfigData_ToggleKeys_ToggleKeys_ARRAYSIZE = ConfigData_ToggleKeys_ToggleKeys_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfigData_ToggleKeys_descriptor();
inline const ::std::string& ConfigData_ToggleKeys_Name(ConfigData_ToggleKeys value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfigData_ToggleKeys_descriptor(), value);
}
inline bool ConfigData_ToggleKeys_Parse(
    const ::std::string& name, ConfigData_ToggleKeys* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfigData_ToggleKeys>(
    ConfigData_ToggleKeys_descriptor(), name, value);
}
enum MoveCamera_ArrowKeys {
  MoveCamera_ArrowKeys_UP = 0,
  MoveCamera_ArrowKeys_RIGHT = 1,
  MoveCamera_ArrowKeys_DOWN = 2,
  MoveCamera_ArrowKeys_LEFT = 3,
  MoveCamera_ArrowKeys_MoveCamera_ArrowKeys_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MoveCamera_ArrowKeys_MoveCamera_ArrowKeys_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MoveCamera_ArrowKeys_IsValid(int value);
const MoveCamera_ArrowKeys MoveCamera_ArrowKeys_ArrowKeys_MIN = MoveCamera_ArrowKeys_UP;
const MoveCamera_ArrowKeys MoveCamera_ArrowKeys_ArrowKeys_MAX = MoveCamera_ArrowKeys_LEFT;
const int MoveCamera_ArrowKeys_ArrowKeys_ARRAYSIZE = MoveCamera_ArrowKeys_ArrowKeys_MAX + 1;

const ::google::protobuf::EnumDescriptor* MoveCamera_ArrowKeys_descriptor();
inline const ::std::string& MoveCamera_ArrowKeys_Name(MoveCamera_ArrowKeys value) {
  return ::google::protobuf::internal::NameOfEnum(
    MoveCamera_ArrowKeys_descriptor(), value);
}
inline bool MoveCamera_ArrowKeys_Parse(
    const ::std::string& name, MoveCamera_ArrowKeys* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MoveCamera_ArrowKeys>(
    MoveCamera_ArrowKeys_descriptor(), name, value);
}
// ===================================================================

class GenericMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.GenericMessage) */ {
 public:
  GenericMessage();
  virtual ~GenericMessage();

  GenericMessage(const GenericMessage& from);

  inline GenericMessage& operator=(const GenericMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericMessage& default_instance();

  static inline const GenericMessage* internal_default_instance() {
    return reinterpret_cast<const GenericMessage*>(
               &_GenericMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GenericMessage* other);

  // implements Message ----------------------------------------------

  inline GenericMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  GenericMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GenericMessage& from);
  void MergeFrom(const GenericMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GenericMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GenericMessage_MsgType MsgType;
  static const MsgType RESPONSE =
    GenericMessage_MsgType_RESPONSE;
  static const MsgType HEARTBEAT =
    GenericMessage_MsgType_HEARTBEAT;
  static const MsgType TERMINATE =
    GenericMessage_MsgType_TERMINATE;
  static const MsgType CONFIG_DATA =
    GenericMessage_MsgType_CONFIG_DATA;
  static const MsgType MOVE_CAMERA =
    GenericMessage_MsgType_MOVE_CAMERA;
  static const MsgType THERMAL_REQUEST =
    GenericMessage_MsgType_THERMAL_REQUEST;
  static const MsgType ACCEL =
    GenericMessage_MsgType_ACCEL;
  static const MsgType GYRO =
    GenericMessage_MsgType_GYRO;
  static const MsgType ALTITUDE =
    GenericMessage_MsgType_ALTITUDE;
  static const MsgType ATTITUDE =
    GenericMessage_MsgType_ATTITUDE;
  static const MsgType TEMP =
    GenericMessage_MsgType_TEMP;
  static const MsgType BAT =
    GenericMessage_MsgType_BAT;
  static const MsgType HEAD =
    GenericMessage_MsgType_HEAD;
  static const MsgType THERMAL_RESPONSE =
    GenericMessage_MsgType_THERMAL_RESPONSE;
  static const MsgType WIFI =
    GenericMessage_MsgType_WIFI;
  static inline bool MsgType_IsValid(int value) {
    return GenericMessage_MsgType_IsValid(value);
  }
  static const MsgType MsgType_MIN =
    GenericMessage_MsgType_MsgType_MIN;
  static const MsgType MsgType_MAX =
    GenericMessage_MsgType_MsgType_MAX;
  static const int MsgType_ARRAYSIZE =
    GenericMessage_MsgType_MsgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgType_descriptor() {
    return GenericMessage_MsgType_descriptor();
  }
  static inline const ::std::string& MsgType_Name(MsgType value) {
    return GenericMessage_MsgType_Name(value);
  }
  static inline bool MsgType_Parse(const ::std::string& name,
      MsgType* value) {
    return GenericMessage_MsgType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .T7.Response response = 3;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 3;
  const ::T7::Response& response() const;
  ::T7::Response* mutable_response();
  ::T7::Response* release_response();
  void set_allocated_response(::T7::Response* response);

  // .T7.HeartBeat heartbeat = 4;
  bool has_heartbeat() const;
  void clear_heartbeat();
  static const int kHeartbeatFieldNumber = 4;
  const ::T7::HeartBeat& heartbeat() const;
  ::T7::HeartBeat* mutable_heartbeat();
  ::T7::HeartBeat* release_heartbeat();
  void set_allocated_heartbeat(::T7::HeartBeat* heartbeat);

  // .T7.Terminate terminate = 5;
  bool has_terminate() const;
  void clear_terminate();
  static const int kTerminateFieldNumber = 5;
  const ::T7::Terminate& terminate() const;
  ::T7::Terminate* mutable_terminate();
  ::T7::Terminate* release_terminate();
  void set_allocated_terminate(::T7::Terminate* terminate);

  // .T7.ConfigData configdata = 6;
  bool has_configdata() const;
  void clear_configdata();
  static const int kConfigdataFieldNumber = 6;
  const ::T7::ConfigData& configdata() const;
  ::T7::ConfigData* mutable_configdata();
  ::T7::ConfigData* release_configdata();
  void set_allocated_configdata(::T7::ConfigData* configdata);

  // .T7.MoveCamera movecamera = 7;
  bool has_movecamera() const;
  void clear_movecamera();
  static const int kMovecameraFieldNumber = 7;
  const ::T7::MoveCamera& movecamera() const;
  ::T7::MoveCamera* mutable_movecamera();
  ::T7::MoveCamera* release_movecamera();
  void set_allocated_movecamera(::T7::MoveCamera* movecamera);

  // .T7.Accel accel = 8;
  bool has_accel() const;
  void clear_accel();
  static const int kAccelFieldNumber = 8;
  const ::T7::Accel& accel() const;
  ::T7::Accel* mutable_accel();
  ::T7::Accel* release_accel();
  void set_allocated_accel(::T7::Accel* accel);

  // .T7.Gyro gyro = 9;
  bool has_gyro() const;
  void clear_gyro();
  static const int kGyroFieldNumber = 9;
  const ::T7::Gyro& gyro() const;
  ::T7::Gyro* mutable_gyro();
  ::T7::Gyro* release_gyro();
  void set_allocated_gyro(::T7::Gyro* gyro);

  // .T7.Altitude altitude = 10;
  bool has_altitude() const;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 10;
  const ::T7::Altitude& altitude() const;
  ::T7::Altitude* mutable_altitude();
  ::T7::Altitude* release_altitude();
  void set_allocated_altitude(::T7::Altitude* altitude);

  // .T7.Attitude attitude = 11;
  bool has_attitude() const;
  void clear_attitude();
  static const int kAttitudeFieldNumber = 11;
  const ::T7::Attitude& attitude() const;
  ::T7::Attitude* mutable_attitude();
  ::T7::Attitude* release_attitude();
  void set_allocated_attitude(::T7::Attitude* attitude);

  // .T7.Temp temp = 12;
  bool has_temp() const;
  void clear_temp();
  static const int kTempFieldNumber = 12;
  const ::T7::Temp& temp() const;
  ::T7::Temp* mutable_temp();
  ::T7::Temp* release_temp();
  void set_allocated_temp(::T7::Temp* temp);

  // .T7.Battery bat = 13;
  bool has_bat() const;
  void clear_bat();
  static const int kBatFieldNumber = 13;
  const ::T7::Battery& bat() const;
  ::T7::Battery* mutable_bat();
  ::T7::Battery* release_bat();
  void set_allocated_bat(::T7::Battery* bat);

  // .T7.Heading head = 14;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 14;
  const ::T7::Heading& head() const;
  ::T7::Heading* mutable_head();
  ::T7::Heading* release_head();
  void set_allocated_head(::T7::Heading* head);

  // .T7.ThermalRequest thermalrequest = 15;
  bool has_thermalrequest() const;
  void clear_thermalrequest();
  static const int kThermalrequestFieldNumber = 15;
  const ::T7::ThermalRequest& thermalrequest() const;
  ::T7::ThermalRequest* mutable_thermalrequest();
  ::T7::ThermalRequest* release_thermalrequest();
  void set_allocated_thermalrequest(::T7::ThermalRequest* thermalrequest);

  // .T7.ThermalResponse thermalresponse = 16;
  bool has_thermalresponse() const;
  void clear_thermalresponse();
  static const int kThermalresponseFieldNumber = 16;
  const ::T7::ThermalResponse& thermalresponse() const;
  ::T7::ThermalResponse* mutable_thermalresponse();
  ::T7::ThermalResponse* release_thermalresponse();
  void set_allocated_thermalresponse(::T7::ThermalResponse* thermalresponse);

  // .T7.WiFi wifi = 17;
  bool has_wifi() const;
  void clear_wifi();
  static const int kWifiFieldNumber = 17;
  const ::T7::WiFi& wifi() const;
  ::T7::WiFi* mutable_wifi();
  ::T7::WiFi* release_wifi();
  void set_allocated_wifi(::T7::WiFi* wifi);

  // double time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  double time() const;
  void set_time(double value);

  // int32 msgtype = 1;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:T7.GenericMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::T7::Response* response_;
  ::T7::HeartBeat* heartbeat_;
  ::T7::Terminate* terminate_;
  ::T7::ConfigData* configdata_;
  ::T7::MoveCamera* movecamera_;
  ::T7::Accel* accel_;
  ::T7::Gyro* gyro_;
  ::T7::Altitude* altitude_;
  ::T7::Attitude* attitude_;
  ::T7::Temp* temp_;
  ::T7::Battery* bat_;
  ::T7::Heading* head_;
  ::T7::ThermalRequest* thermalrequest_;
  ::T7::ThermalResponse* thermalresponse_;
  ::T7::WiFi* wifi_;
  double time_;
  ::google::protobuf::int32 msgtype_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool roger_that = 1;
  void clear_roger_that();
  static const int kRogerThatFieldNumber = 1;
  bool roger_that() const;
  void set_roger_that(bool value);

  // @@protoc_insertion_point(class_scope:T7.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool roger_that_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.HeartBeat) */ {
 public:
  HeartBeat();
  virtual ~HeartBeat();

  HeartBeat(const HeartBeat& from);

  inline HeartBeat& operator=(const HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeat& default_instance();

  static inline const HeartBeat* internal_default_instance() {
    return reinterpret_cast<const HeartBeat*>(
               &_HeartBeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(HeartBeat* other);

  // implements Message ----------------------------------------------

  inline HeartBeat* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeat& from);
  void MergeFrom(const HeartBeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool alive = 1;
  void clear_alive();
  static const int kAliveFieldNumber = 1;
  bool alive() const;
  void set_alive(bool value);

  // @@protoc_insertion_point(class_scope:T7.HeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool alive_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Terminate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Terminate) */ {
 public:
  Terminate();
  virtual ~Terminate();

  Terminate(const Terminate& from);

  inline Terminate& operator=(const Terminate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Terminate& default_instance();

  static inline const Terminate* internal_default_instance() {
    return reinterpret_cast<const Terminate*>(
               &_Terminate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Terminate* other);

  // implements Message ----------------------------------------------

  inline Terminate* New() const PROTOBUF_FINAL { return New(NULL); }

  Terminate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Terminate& from);
  void MergeFrom(const Terminate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Terminate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Terminate_TerminateKeys TerminateKeys;
  static const TerminateKeys selfTerminate =
    Terminate_TerminateKeys_selfTerminate;
  static const TerminateKeys softShutdown =
    Terminate_TerminateKeys_softShutdown;
  static const TerminateKeys emergencyStop =
    Terminate_TerminateKeys_emergencyStop;
  static inline bool TerminateKeys_IsValid(int value) {
    return Terminate_TerminateKeys_IsValid(value);
  }
  static const TerminateKeys TerminateKeys_MIN =
    Terminate_TerminateKeys_TerminateKeys_MIN;
  static const TerminateKeys TerminateKeys_MAX =
    Terminate_TerminateKeys_TerminateKeys_MAX;
  static const int TerminateKeys_ARRAYSIZE =
    Terminate_TerminateKeys_TerminateKeys_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TerminateKeys_descriptor() {
    return Terminate_TerminateKeys_descriptor();
  }
  static inline const ::std::string& TerminateKeys_Name(TerminateKeys value) {
    return Terminate_TerminateKeys_Name(value);
  }
  static inline bool TerminateKeys_Parse(const ::std::string& name,
      TerminateKeys* value) {
    return Terminate_TerminateKeys_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 terminateKey = 1;
  void clear_terminatekey();
  static const int kTerminateKeyFieldNumber = 1;
  ::google::protobuf::int32 terminatekey() const;
  void set_terminatekey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:T7.Terminate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 terminatekey_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.ConfigData) */ {
 public:
  ConfigData();
  virtual ~ConfigData();

  ConfigData(const ConfigData& from);

  inline ConfigData& operator=(const ConfigData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigData& default_instance();

  static inline const ConfigData* internal_default_instance() {
    return reinterpret_cast<const ConfigData*>(
               &_ConfigData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ConfigData* other);

  // implements Message ----------------------------------------------

  inline ConfigData* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigData& from);
  void MergeFrom(const ConfigData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ConfigData_ToggleKeys ToggleKeys;
  static const ToggleKeys toggleAccel =
    ConfigData_ToggleKeys_toggleAccel;
  static const ToggleKeys toggleGyro =
    ConfigData_ToggleKeys_toggleGyro;
  static const ToggleKeys toggleAltitude =
    ConfigData_ToggleKeys_toggleAltitude;
  static const ToggleKeys toggleAttitude =
    ConfigData_ToggleKeys_toggleAttitude;
  static const ToggleKeys toggleTemp =
    ConfigData_ToggleKeys_toggleTemp;
  static const ToggleKeys toggleBat =
    ConfigData_ToggleKeys_toggleBat;
  static const ToggleKeys toggleArray =
    ConfigData_ToggleKeys_toggleArray;
  static const ToggleKeys toggleHead =
    ConfigData_ToggleKeys_toggleHead;
  static const ToggleKeys toggleWifi =
    ConfigData_ToggleKeys_toggleWifi;
  static inline bool ToggleKeys_IsValid(int value) {
    return ConfigData_ToggleKeys_IsValid(value);
  }
  static const ToggleKeys ToggleKeys_MIN =
    ConfigData_ToggleKeys_ToggleKeys_MIN;
  static const ToggleKeys ToggleKeys_MAX =
    ConfigData_ToggleKeys_ToggleKeys_MAX;
  static const int ToggleKeys_ARRAYSIZE =
    ConfigData_ToggleKeys_ToggleKeys_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ToggleKeys_descriptor() {
    return ConfigData_ToggleKeys_descriptor();
  }
  static inline const ::std::string& ToggleKeys_Name(ToggleKeys value) {
    return ConfigData_ToggleKeys_Name(value);
  }
  static inline bool ToggleKeys_Parse(const ::std::string& name,
      ToggleKeys* value) {
    return ConfigData_ToggleKeys_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 configKey = 1;
  void clear_configkey();
  static const int kConfigKeyFieldNumber = 1;
  ::google::protobuf::int32 configkey() const;
  void set_configkey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:T7.ConfigData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 configkey_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveCamera : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.MoveCamera) */ {
 public:
  MoveCamera();
  virtual ~MoveCamera();

  MoveCamera(const MoveCamera& from);

  inline MoveCamera& operator=(const MoveCamera& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveCamera& default_instance();

  static inline const MoveCamera* internal_default_instance() {
    return reinterpret_cast<const MoveCamera*>(
               &_MoveCamera_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MoveCamera* other);

  // implements Message ----------------------------------------------

  inline MoveCamera* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveCamera* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MoveCamera& from);
  void MergeFrom(const MoveCamera& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MoveCamera* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MoveCamera_ArrowKeys ArrowKeys;
  static const ArrowKeys UP =
    MoveCamera_ArrowKeys_UP;
  static const ArrowKeys RIGHT =
    MoveCamera_ArrowKeys_RIGHT;
  static const ArrowKeys DOWN =
    MoveCamera_ArrowKeys_DOWN;
  static const ArrowKeys LEFT =
    MoveCamera_ArrowKeys_LEFT;
  static inline bool ArrowKeys_IsValid(int value) {
    return MoveCamera_ArrowKeys_IsValid(value);
  }
  static const ArrowKeys ArrowKeys_MIN =
    MoveCamera_ArrowKeys_ArrowKeys_MIN;
  static const ArrowKeys ArrowKeys_MAX =
    MoveCamera_ArrowKeys_ArrowKeys_MAX;
  static const int ArrowKeys_ARRAYSIZE =
    MoveCamera_ArrowKeys_ArrowKeys_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ArrowKeys_descriptor() {
    return MoveCamera_ArrowKeys_descriptor();
  }
  static inline const ::std::string& ArrowKeys_Name(ArrowKeys value) {
    return MoveCamera_ArrowKeys_Name(value);
  }
  static inline bool ArrowKeys_Parse(const ::std::string& name,
      ArrowKeys* value) {
    return MoveCamera_ArrowKeys_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 arrowKey = 1;
  void clear_arrowkey();
  static const int kArrowKeyFieldNumber = 1;
  ::google::protobuf::int32 arrowkey() const;
  void set_arrowkey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:T7.MoveCamera)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 arrowkey_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ThermalRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.ThermalRequest) */ {
 public:
  ThermalRequest();
  virtual ~ThermalRequest();

  ThermalRequest(const ThermalRequest& from);

  inline ThermalRequest& operator=(const ThermalRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThermalRequest& default_instance();

  static inline const ThermalRequest* internal_default_instance() {
    return reinterpret_cast<const ThermalRequest*>(
               &_ThermalRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ThermalRequest* other);

  // implements Message ----------------------------------------------

  inline ThermalRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ThermalRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ThermalRequest& from);
  void MergeFrom(const ThermalRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ThermalRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool request = 1;
  void clear_request();
  static const int kRequestFieldNumber = 1;
  bool request() const;
  void set_request(bool value);

  // @@protoc_insertion_point(class_scope:T7.ThermalRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool request_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Accel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Accel) */ {
 public:
  Accel();
  virtual ~Accel();

  Accel(const Accel& from);

  inline Accel& operator=(const Accel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Accel& default_instance();

  static inline const Accel* internal_default_instance() {
    return reinterpret_cast<const Accel*>(
               &_Accel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Accel* other);

  // implements Message ----------------------------------------------

  inline Accel* New() const PROTOBUF_FINAL { return New(NULL); }

  Accel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Accel& from);
  void MergeFrom(const Accel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Accel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:T7.Accel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gyro : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Gyro) */ {
 public:
  Gyro();
  virtual ~Gyro();

  Gyro(const Gyro& from);

  inline Gyro& operator=(const Gyro& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gyro& default_instance();

  static inline const Gyro* internal_default_instance() {
    return reinterpret_cast<const Gyro*>(
               &_Gyro_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Gyro* other);

  // implements Message ----------------------------------------------

  inline Gyro* New() const PROTOBUF_FINAL { return New(NULL); }

  Gyro* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Gyro& from);
  void MergeFrom(const Gyro& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Gyro* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:T7.Gyro)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Altitude : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Altitude) */ {
 public:
  Altitude();
  virtual ~Altitude();

  Altitude(const Altitude& from);

  inline Altitude& operator=(const Altitude& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Altitude& default_instance();

  static inline const Altitude* internal_default_instance() {
    return reinterpret_cast<const Altitude*>(
               &_Altitude_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Altitude* other);

  // implements Message ----------------------------------------------

  inline Altitude* New() const PROTOBUF_FINAL { return New(NULL); }

  Altitude* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Altitude& from);
  void MergeFrom(const Altitude& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Altitude* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double alt = 1;
  void clear_alt();
  static const int kAltFieldNumber = 1;
  double alt() const;
  void set_alt(double value);

  // @@protoc_insertion_point(class_scope:T7.Altitude)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double alt_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Attitude : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Attitude) */ {
 public:
  Attitude();
  virtual ~Attitude();

  Attitude(const Attitude& from);

  inline Attitude& operator=(const Attitude& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attitude& default_instance();

  static inline const Attitude* internal_default_instance() {
    return reinterpret_cast<const Attitude*>(
               &_Attitude_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Attitude* other);

  // implements Message ----------------------------------------------

  inline Attitude* New() const PROTOBUF_FINAL { return New(NULL); }

  Attitude* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Attitude& from);
  void MergeFrom(const Attitude& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Attitude* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double roll = 1;
  void clear_roll();
  static const int kRollFieldNumber = 1;
  double roll() const;
  void set_roll(double value);

  // double pitch = 2;
  void clear_pitch();
  static const int kPitchFieldNumber = 2;
  double pitch() const;
  void set_pitch(double value);

  // double yaw = 3;
  void clear_yaw();
  static const int kYawFieldNumber = 3;
  double yaw() const;
  void set_yaw(double value);

  // @@protoc_insertion_point(class_scope:T7.Attitude)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double roll_;
  double pitch_;
  double yaw_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Temp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Temp) */ {
 public:
  Temp();
  virtual ~Temp();

  Temp(const Temp& from);

  inline Temp& operator=(const Temp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Temp& default_instance();

  static inline const Temp* internal_default_instance() {
    return reinterpret_cast<const Temp*>(
               &_Temp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Temp* other);

  // implements Message ----------------------------------------------

  inline Temp* New() const PROTOBUF_FINAL { return New(NULL); }

  Temp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Temp& from);
  void MergeFrom(const Temp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Temp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double temp = 1;
  void clear_temp();
  static const int kTempFieldNumber = 1;
  double temp() const;
  void set_temp(double value);

  // @@protoc_insertion_point(class_scope:T7.Temp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double temp_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Battery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Battery) */ {
 public:
  Battery();
  virtual ~Battery();

  Battery(const Battery& from);

  inline Battery& operator=(const Battery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battery& default_instance();

  static inline const Battery* internal_default_instance() {
    return reinterpret_cast<const Battery*>(
               &_Battery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Battery* other);

  // implements Message ----------------------------------------------

  inline Battery* New() const PROTOBUF_FINAL { return New(NULL); }

  Battery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Battery& from);
  void MergeFrom(const Battery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Battery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double percent = 1;
  void clear_percent();
  static const int kPercentFieldNumber = 1;
  double percent() const;
  void set_percent(double value);

  // @@protoc_insertion_point(class_scope:T7.Battery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double percent_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heading : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.Heading) */ {
 public:
  Heading();
  virtual ~Heading();

  Heading(const Heading& from);

  inline Heading& operator=(const Heading& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Heading& default_instance();

  static inline const Heading* internal_default_instance() {
    return reinterpret_cast<const Heading*>(
               &_Heading_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Heading* other);

  // implements Message ----------------------------------------------

  inline Heading* New() const PROTOBUF_FINAL { return New(NULL); }

  Heading* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Heading& from);
  void MergeFrom(const Heading& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Heading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double heading = 1;
  void clear_heading();
  static const int kHeadingFieldNumber = 1;
  double heading() const;
  void set_heading(double value);

  // @@protoc_insertion_point(class_scope:T7.Heading)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double heading_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ThermalResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.ThermalResponse) */ {
 public:
  ThermalResponse();
  virtual ~ThermalResponse();

  ThermalResponse(const ThermalResponse& from);

  inline ThermalResponse& operator=(const ThermalResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThermalResponse& default_instance();

  static inline const ThermalResponse* internal_default_instance() {
    return reinterpret_cast<const ThermalResponse*>(
               &_ThermalResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ThermalResponse* other);

  // implements Message ----------------------------------------------

  inline ThermalResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ThermalResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ThermalResponse& from);
  void MergeFrom(const ThermalResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ThermalResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double response = 1;
  void clear_response();
  static const int kResponseFieldNumber = 1;
  double response() const;
  void set_response(double value);

  // @@protoc_insertion_point(class_scope:T7.ThermalResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double response_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WiFi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:T7.WiFi) */ {
 public:
  WiFi();
  virtual ~WiFi();

  WiFi(const WiFi& from);

  inline WiFi& operator=(const WiFi& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WiFi& default_instance();

  static inline const WiFi* internal_default_instance() {
    return reinterpret_cast<const WiFi*>(
               &_WiFi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(WiFi* other);

  // implements Message ----------------------------------------------

  inline WiFi* New() const PROTOBUF_FINAL { return New(NULL); }

  WiFi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WiFi& from);
  void MergeFrom(const WiFi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WiFi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double strength = 1;
  void clear_strength();
  static const int kStrengthFieldNumber = 1;
  double strength() const;
  void set_strength(double value);

  // double freq = 2;
  void clear_freq();
  static const int kFreqFieldNumber = 2;
  double freq() const;
  void set_freq(double value);

  // @@protoc_insertion_point(class_scope:T7.WiFi)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double strength_;
  double freq_;
  mutable int _cached_size_;
  friend struct protobuf_T7Messages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GenericMessage

// int32 msgtype = 1;
inline void GenericMessage::clear_msgtype() {
  msgtype_ = 0;
}
inline ::google::protobuf::int32 GenericMessage::msgtype() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.msgtype)
  return msgtype_;
}
inline void GenericMessage::set_msgtype(::google::protobuf::int32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:T7.GenericMessage.msgtype)
}

// double time = 2;
inline void GenericMessage::clear_time() {
  time_ = 0;
}
inline double GenericMessage::time() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.time)
  return time_;
}
inline void GenericMessage::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:T7.GenericMessage.time)
}

// .T7.Response response = 3;
inline bool GenericMessage::has_response() const {
  return this != internal_default_instance() && response_ != NULL;
}
inline void GenericMessage::clear_response() {
  if (GetArenaNoVirtual() == NULL && response_ != NULL) delete response_;
  response_ = NULL;
}
inline const ::T7::Response& GenericMessage::response() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.response)
  return response_ != NULL ? *response_
                         : *::T7::Response::internal_default_instance();
}
inline ::T7::Response* GenericMessage::mutable_response() {
  
  if (response_ == NULL) {
    response_ = new ::T7::Response;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.response)
  return response_;
}
inline ::T7::Response* GenericMessage::release_response() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.response)
  
  ::T7::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_response(::T7::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.response)
}

// .T7.HeartBeat heartbeat = 4;
inline bool GenericMessage::has_heartbeat() const {
  return this != internal_default_instance() && heartbeat_ != NULL;
}
inline void GenericMessage::clear_heartbeat() {
  if (GetArenaNoVirtual() == NULL && heartbeat_ != NULL) delete heartbeat_;
  heartbeat_ = NULL;
}
inline const ::T7::HeartBeat& GenericMessage::heartbeat() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.heartbeat)
  return heartbeat_ != NULL ? *heartbeat_
                         : *::T7::HeartBeat::internal_default_instance();
}
inline ::T7::HeartBeat* GenericMessage::mutable_heartbeat() {
  
  if (heartbeat_ == NULL) {
    heartbeat_ = new ::T7::HeartBeat;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.heartbeat)
  return heartbeat_;
}
inline ::T7::HeartBeat* GenericMessage::release_heartbeat() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.heartbeat)
  
  ::T7::HeartBeat* temp = heartbeat_;
  heartbeat_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_heartbeat(::T7::HeartBeat* heartbeat) {
  delete heartbeat_;
  heartbeat_ = heartbeat;
  if (heartbeat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.heartbeat)
}

// .T7.Terminate terminate = 5;
inline bool GenericMessage::has_terminate() const {
  return this != internal_default_instance() && terminate_ != NULL;
}
inline void GenericMessage::clear_terminate() {
  if (GetArenaNoVirtual() == NULL && terminate_ != NULL) delete terminate_;
  terminate_ = NULL;
}
inline const ::T7::Terminate& GenericMessage::terminate() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.terminate)
  return terminate_ != NULL ? *terminate_
                         : *::T7::Terminate::internal_default_instance();
}
inline ::T7::Terminate* GenericMessage::mutable_terminate() {
  
  if (terminate_ == NULL) {
    terminate_ = new ::T7::Terminate;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.terminate)
  return terminate_;
}
inline ::T7::Terminate* GenericMessage::release_terminate() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.terminate)
  
  ::T7::Terminate* temp = terminate_;
  terminate_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_terminate(::T7::Terminate* terminate) {
  delete terminate_;
  terminate_ = terminate;
  if (terminate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.terminate)
}

// .T7.ConfigData configdata = 6;
inline bool GenericMessage::has_configdata() const {
  return this != internal_default_instance() && configdata_ != NULL;
}
inline void GenericMessage::clear_configdata() {
  if (GetArenaNoVirtual() == NULL && configdata_ != NULL) delete configdata_;
  configdata_ = NULL;
}
inline const ::T7::ConfigData& GenericMessage::configdata() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.configdata)
  return configdata_ != NULL ? *configdata_
                         : *::T7::ConfigData::internal_default_instance();
}
inline ::T7::ConfigData* GenericMessage::mutable_configdata() {
  
  if (configdata_ == NULL) {
    configdata_ = new ::T7::ConfigData;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.configdata)
  return configdata_;
}
inline ::T7::ConfigData* GenericMessage::release_configdata() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.configdata)
  
  ::T7::ConfigData* temp = configdata_;
  configdata_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_configdata(::T7::ConfigData* configdata) {
  delete configdata_;
  configdata_ = configdata;
  if (configdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.configdata)
}

// .T7.MoveCamera movecamera = 7;
inline bool GenericMessage::has_movecamera() const {
  return this != internal_default_instance() && movecamera_ != NULL;
}
inline void GenericMessage::clear_movecamera() {
  if (GetArenaNoVirtual() == NULL && movecamera_ != NULL) delete movecamera_;
  movecamera_ = NULL;
}
inline const ::T7::MoveCamera& GenericMessage::movecamera() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.movecamera)
  return movecamera_ != NULL ? *movecamera_
                         : *::T7::MoveCamera::internal_default_instance();
}
inline ::T7::MoveCamera* GenericMessage::mutable_movecamera() {
  
  if (movecamera_ == NULL) {
    movecamera_ = new ::T7::MoveCamera;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.movecamera)
  return movecamera_;
}
inline ::T7::MoveCamera* GenericMessage::release_movecamera() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.movecamera)
  
  ::T7::MoveCamera* temp = movecamera_;
  movecamera_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_movecamera(::T7::MoveCamera* movecamera) {
  delete movecamera_;
  movecamera_ = movecamera;
  if (movecamera) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.movecamera)
}

// .T7.ThermalRequest thermalrequest = 15;
inline bool GenericMessage::has_thermalrequest() const {
  return this != internal_default_instance() && thermalrequest_ != NULL;
}
inline void GenericMessage::clear_thermalrequest() {
  if (GetArenaNoVirtual() == NULL && thermalrequest_ != NULL) delete thermalrequest_;
  thermalrequest_ = NULL;
}
inline const ::T7::ThermalRequest& GenericMessage::thermalrequest() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.thermalrequest)
  return thermalrequest_ != NULL ? *thermalrequest_
                         : *::T7::ThermalRequest::internal_default_instance();
}
inline ::T7::ThermalRequest* GenericMessage::mutable_thermalrequest() {
  
  if (thermalrequest_ == NULL) {
    thermalrequest_ = new ::T7::ThermalRequest;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.thermalrequest)
  return thermalrequest_;
}
inline ::T7::ThermalRequest* GenericMessage::release_thermalrequest() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.thermalrequest)
  
  ::T7::ThermalRequest* temp = thermalrequest_;
  thermalrequest_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_thermalrequest(::T7::ThermalRequest* thermalrequest) {
  delete thermalrequest_;
  thermalrequest_ = thermalrequest;
  if (thermalrequest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.thermalrequest)
}

// .T7.Accel accel = 8;
inline bool GenericMessage::has_accel() const {
  return this != internal_default_instance() && accel_ != NULL;
}
inline void GenericMessage::clear_accel() {
  if (GetArenaNoVirtual() == NULL && accel_ != NULL) delete accel_;
  accel_ = NULL;
}
inline const ::T7::Accel& GenericMessage::accel() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.accel)
  return accel_ != NULL ? *accel_
                         : *::T7::Accel::internal_default_instance();
}
inline ::T7::Accel* GenericMessage::mutable_accel() {
  
  if (accel_ == NULL) {
    accel_ = new ::T7::Accel;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.accel)
  return accel_;
}
inline ::T7::Accel* GenericMessage::release_accel() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.accel)
  
  ::T7::Accel* temp = accel_;
  accel_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_accel(::T7::Accel* accel) {
  delete accel_;
  accel_ = accel;
  if (accel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.accel)
}

// .T7.Gyro gyro = 9;
inline bool GenericMessage::has_gyro() const {
  return this != internal_default_instance() && gyro_ != NULL;
}
inline void GenericMessage::clear_gyro() {
  if (GetArenaNoVirtual() == NULL && gyro_ != NULL) delete gyro_;
  gyro_ = NULL;
}
inline const ::T7::Gyro& GenericMessage::gyro() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.gyro)
  return gyro_ != NULL ? *gyro_
                         : *::T7::Gyro::internal_default_instance();
}
inline ::T7::Gyro* GenericMessage::mutable_gyro() {
  
  if (gyro_ == NULL) {
    gyro_ = new ::T7::Gyro;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.gyro)
  return gyro_;
}
inline ::T7::Gyro* GenericMessage::release_gyro() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.gyro)
  
  ::T7::Gyro* temp = gyro_;
  gyro_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_gyro(::T7::Gyro* gyro) {
  delete gyro_;
  gyro_ = gyro;
  if (gyro) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.gyro)
}

// .T7.Altitude altitude = 10;
inline bool GenericMessage::has_altitude() const {
  return this != internal_default_instance() && altitude_ != NULL;
}
inline void GenericMessage::clear_altitude() {
  if (GetArenaNoVirtual() == NULL && altitude_ != NULL) delete altitude_;
  altitude_ = NULL;
}
inline const ::T7::Altitude& GenericMessage::altitude() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.altitude)
  return altitude_ != NULL ? *altitude_
                         : *::T7::Altitude::internal_default_instance();
}
inline ::T7::Altitude* GenericMessage::mutable_altitude() {
  
  if (altitude_ == NULL) {
    altitude_ = new ::T7::Altitude;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.altitude)
  return altitude_;
}
inline ::T7::Altitude* GenericMessage::release_altitude() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.altitude)
  
  ::T7::Altitude* temp = altitude_;
  altitude_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_altitude(::T7::Altitude* altitude) {
  delete altitude_;
  altitude_ = altitude;
  if (altitude) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.altitude)
}

// .T7.Attitude attitude = 11;
inline bool GenericMessage::has_attitude() const {
  return this != internal_default_instance() && attitude_ != NULL;
}
inline void GenericMessage::clear_attitude() {
  if (GetArenaNoVirtual() == NULL && attitude_ != NULL) delete attitude_;
  attitude_ = NULL;
}
inline const ::T7::Attitude& GenericMessage::attitude() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.attitude)
  return attitude_ != NULL ? *attitude_
                         : *::T7::Attitude::internal_default_instance();
}
inline ::T7::Attitude* GenericMessage::mutable_attitude() {
  
  if (attitude_ == NULL) {
    attitude_ = new ::T7::Attitude;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.attitude)
  return attitude_;
}
inline ::T7::Attitude* GenericMessage::release_attitude() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.attitude)
  
  ::T7::Attitude* temp = attitude_;
  attitude_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_attitude(::T7::Attitude* attitude) {
  delete attitude_;
  attitude_ = attitude;
  if (attitude) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.attitude)
}

// .T7.Temp temp = 12;
inline bool GenericMessage::has_temp() const {
  return this != internal_default_instance() && temp_ != NULL;
}
inline void GenericMessage::clear_temp() {
  if (GetArenaNoVirtual() == NULL && temp_ != NULL) delete temp_;
  temp_ = NULL;
}
inline const ::T7::Temp& GenericMessage::temp() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.temp)
  return temp_ != NULL ? *temp_
                         : *::T7::Temp::internal_default_instance();
}
inline ::T7::Temp* GenericMessage::mutable_temp() {
  
  if (temp_ == NULL) {
    temp_ = new ::T7::Temp;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.temp)
  return temp_;
}
inline ::T7::Temp* GenericMessage::release_temp() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.temp)
  
  ::T7::Temp* temp = temp_;
  temp_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_temp(::T7::Temp* temp) {
  delete temp_;
  temp_ = temp;
  if (temp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.temp)
}

// .T7.Battery bat = 13;
inline bool GenericMessage::has_bat() const {
  return this != internal_default_instance() && bat_ != NULL;
}
inline void GenericMessage::clear_bat() {
  if (GetArenaNoVirtual() == NULL && bat_ != NULL) delete bat_;
  bat_ = NULL;
}
inline const ::T7::Battery& GenericMessage::bat() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.bat)
  return bat_ != NULL ? *bat_
                         : *::T7::Battery::internal_default_instance();
}
inline ::T7::Battery* GenericMessage::mutable_bat() {
  
  if (bat_ == NULL) {
    bat_ = new ::T7::Battery;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.bat)
  return bat_;
}
inline ::T7::Battery* GenericMessage::release_bat() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.bat)
  
  ::T7::Battery* temp = bat_;
  bat_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_bat(::T7::Battery* bat) {
  delete bat_;
  bat_ = bat;
  if (bat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.bat)
}

// .T7.Heading head = 14;
inline bool GenericMessage::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void GenericMessage::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
inline const ::T7::Heading& GenericMessage::head() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.head)
  return head_ != NULL ? *head_
                         : *::T7::Heading::internal_default_instance();
}
inline ::T7::Heading* GenericMessage::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::T7::Heading;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.head)
  return head_;
}
inline ::T7::Heading* GenericMessage::release_head() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.head)
  
  ::T7::Heading* temp = head_;
  head_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_head(::T7::Heading* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.head)
}

// .T7.ThermalResponse thermalresponse = 16;
inline bool GenericMessage::has_thermalresponse() const {
  return this != internal_default_instance() && thermalresponse_ != NULL;
}
inline void GenericMessage::clear_thermalresponse() {
  if (GetArenaNoVirtual() == NULL && thermalresponse_ != NULL) delete thermalresponse_;
  thermalresponse_ = NULL;
}
inline const ::T7::ThermalResponse& GenericMessage::thermalresponse() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.thermalresponse)
  return thermalresponse_ != NULL ? *thermalresponse_
                         : *::T7::ThermalResponse::internal_default_instance();
}
inline ::T7::ThermalResponse* GenericMessage::mutable_thermalresponse() {
  
  if (thermalresponse_ == NULL) {
    thermalresponse_ = new ::T7::ThermalResponse;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.thermalresponse)
  return thermalresponse_;
}
inline ::T7::ThermalResponse* GenericMessage::release_thermalresponse() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.thermalresponse)
  
  ::T7::ThermalResponse* temp = thermalresponse_;
  thermalresponse_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_thermalresponse(::T7::ThermalResponse* thermalresponse) {
  delete thermalresponse_;
  thermalresponse_ = thermalresponse;
  if (thermalresponse) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.thermalresponse)
}

// .T7.WiFi wifi = 17;
inline bool GenericMessage::has_wifi() const {
  return this != internal_default_instance() && wifi_ != NULL;
}
inline void GenericMessage::clear_wifi() {
  if (GetArenaNoVirtual() == NULL && wifi_ != NULL) delete wifi_;
  wifi_ = NULL;
}
inline const ::T7::WiFi& GenericMessage::wifi() const {
  // @@protoc_insertion_point(field_get:T7.GenericMessage.wifi)
  return wifi_ != NULL ? *wifi_
                         : *::T7::WiFi::internal_default_instance();
}
inline ::T7::WiFi* GenericMessage::mutable_wifi() {
  
  if (wifi_ == NULL) {
    wifi_ = new ::T7::WiFi;
  }
  // @@protoc_insertion_point(field_mutable:T7.GenericMessage.wifi)
  return wifi_;
}
inline ::T7::WiFi* GenericMessage::release_wifi() {
  // @@protoc_insertion_point(field_release:T7.GenericMessage.wifi)
  
  ::T7::WiFi* temp = wifi_;
  wifi_ = NULL;
  return temp;
}
inline void GenericMessage::set_allocated_wifi(::T7::WiFi* wifi) {
  delete wifi_;
  wifi_ = wifi;
  if (wifi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:T7.GenericMessage.wifi)
}

// -------------------------------------------------------------------

// Response

// bool roger_that = 1;
inline void Response::clear_roger_that() {
  roger_that_ = false;
}
inline bool Response::roger_that() const {
  // @@protoc_insertion_point(field_get:T7.Response.roger_that)
  return roger_that_;
}
inline void Response::set_roger_that(bool value) {
  
  roger_that_ = value;
  // @@protoc_insertion_point(field_set:T7.Response.roger_that)
}

// -------------------------------------------------------------------

// HeartBeat

// bool alive = 1;
inline void HeartBeat::clear_alive() {
  alive_ = false;
}
inline bool HeartBeat::alive() const {
  // @@protoc_insertion_point(field_get:T7.HeartBeat.alive)
  return alive_;
}
inline void HeartBeat::set_alive(bool value) {
  
  alive_ = value;
  // @@protoc_insertion_point(field_set:T7.HeartBeat.alive)
}

// -------------------------------------------------------------------

// Terminate

// int32 terminateKey = 1;
inline void Terminate::clear_terminatekey() {
  terminatekey_ = 0;
}
inline ::google::protobuf::int32 Terminate::terminatekey() const {
  // @@protoc_insertion_point(field_get:T7.Terminate.terminateKey)
  return terminatekey_;
}
inline void Terminate::set_terminatekey(::google::protobuf::int32 value) {
  
  terminatekey_ = value;
  // @@protoc_insertion_point(field_set:T7.Terminate.terminateKey)
}

// -------------------------------------------------------------------

// ConfigData

// int32 configKey = 1;
inline void ConfigData::clear_configkey() {
  configkey_ = 0;
}
inline ::google::protobuf::int32 ConfigData::configkey() const {
  // @@protoc_insertion_point(field_get:T7.ConfigData.configKey)
  return configkey_;
}
inline void ConfigData::set_configkey(::google::protobuf::int32 value) {
  
  configkey_ = value;
  // @@protoc_insertion_point(field_set:T7.ConfigData.configKey)
}

// -------------------------------------------------------------------

// MoveCamera

// int32 arrowKey = 1;
inline void MoveCamera::clear_arrowkey() {
  arrowkey_ = 0;
}
inline ::google::protobuf::int32 MoveCamera::arrowkey() const {
  // @@protoc_insertion_point(field_get:T7.MoveCamera.arrowKey)
  return arrowkey_;
}
inline void MoveCamera::set_arrowkey(::google::protobuf::int32 value) {
  
  arrowkey_ = value;
  // @@protoc_insertion_point(field_set:T7.MoveCamera.arrowKey)
}

// -------------------------------------------------------------------

// ThermalRequest

// bool request = 1;
inline void ThermalRequest::clear_request() {
  request_ = false;
}
inline bool ThermalRequest::request() const {
  // @@protoc_insertion_point(field_get:T7.ThermalRequest.request)
  return request_;
}
inline void ThermalRequest::set_request(bool value) {
  
  request_ = value;
  // @@protoc_insertion_point(field_set:T7.ThermalRequest.request)
}

// -------------------------------------------------------------------

// Accel

// double x = 1;
inline void Accel::clear_x() {
  x_ = 0;
}
inline double Accel::x() const {
  // @@protoc_insertion_point(field_get:T7.Accel.x)
  return x_;
}
inline void Accel::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:T7.Accel.x)
}

// double y = 2;
inline void Accel::clear_y() {
  y_ = 0;
}
inline double Accel::y() const {
  // @@protoc_insertion_point(field_get:T7.Accel.y)
  return y_;
}
inline void Accel::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:T7.Accel.y)
}

// double z = 3;
inline void Accel::clear_z() {
  z_ = 0;
}
inline double Accel::z() const {
  // @@protoc_insertion_point(field_get:T7.Accel.z)
  return z_;
}
inline void Accel::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:T7.Accel.z)
}

// -------------------------------------------------------------------

// Gyro

// double x = 1;
inline void Gyro::clear_x() {
  x_ = 0;
}
inline double Gyro::x() const {
  // @@protoc_insertion_point(field_get:T7.Gyro.x)
  return x_;
}
inline void Gyro::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:T7.Gyro.x)
}

// double y = 2;
inline void Gyro::clear_y() {
  y_ = 0;
}
inline double Gyro::y() const {
  // @@protoc_insertion_point(field_get:T7.Gyro.y)
  return y_;
}
inline void Gyro::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:T7.Gyro.y)
}

// double z = 3;
inline void Gyro::clear_z() {
  z_ = 0;
}
inline double Gyro::z() const {
  // @@protoc_insertion_point(field_get:T7.Gyro.z)
  return z_;
}
inline void Gyro::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:T7.Gyro.z)
}

// -------------------------------------------------------------------

// Altitude

// double alt = 1;
inline void Altitude::clear_alt() {
  alt_ = 0;
}
inline double Altitude::alt() const {
  // @@protoc_insertion_point(field_get:T7.Altitude.alt)
  return alt_;
}
inline void Altitude::set_alt(double value) {
  
  alt_ = value;
  // @@protoc_insertion_point(field_set:T7.Altitude.alt)
}

// -------------------------------------------------------------------

// Attitude

// double roll = 1;
inline void Attitude::clear_roll() {
  roll_ = 0;
}
inline double Attitude::roll() const {
  // @@protoc_insertion_point(field_get:T7.Attitude.roll)
  return roll_;
}
inline void Attitude::set_roll(double value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:T7.Attitude.roll)
}

// double pitch = 2;
inline void Attitude::clear_pitch() {
  pitch_ = 0;
}
inline double Attitude::pitch() const {
  // @@protoc_insertion_point(field_get:T7.Attitude.pitch)
  return pitch_;
}
inline void Attitude::set_pitch(double value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:T7.Attitude.pitch)
}

// double yaw = 3;
inline void Attitude::clear_yaw() {
  yaw_ = 0;
}
inline double Attitude::yaw() const {
  // @@protoc_insertion_point(field_get:T7.Attitude.yaw)
  return yaw_;
}
inline void Attitude::set_yaw(double value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:T7.Attitude.yaw)
}

// -------------------------------------------------------------------

// Temp

// double temp = 1;
inline void Temp::clear_temp() {
  temp_ = 0;
}
inline double Temp::temp() const {
  // @@protoc_insertion_point(field_get:T7.Temp.temp)
  return temp_;
}
inline void Temp::set_temp(double value) {
  
  temp_ = value;
  // @@protoc_insertion_point(field_set:T7.Temp.temp)
}

// -------------------------------------------------------------------

// Battery

// double percent = 1;
inline void Battery::clear_percent() {
  percent_ = 0;
}
inline double Battery::percent() const {
  // @@protoc_insertion_point(field_get:T7.Battery.percent)
  return percent_;
}
inline void Battery::set_percent(double value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:T7.Battery.percent)
}

// -------------------------------------------------------------------

// Heading

// double heading = 1;
inline void Heading::clear_heading() {
  heading_ = 0;
}
inline double Heading::heading() const {
  // @@protoc_insertion_point(field_get:T7.Heading.heading)
  return heading_;
}
inline void Heading::set_heading(double value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:T7.Heading.heading)
}

// -------------------------------------------------------------------

// ThermalResponse

// double response = 1;
inline void ThermalResponse::clear_response() {
  response_ = 0;
}
inline double ThermalResponse::response() const {
  // @@protoc_insertion_point(field_get:T7.ThermalResponse.response)
  return response_;
}
inline void ThermalResponse::set_response(double value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:T7.ThermalResponse.response)
}

// -------------------------------------------------------------------

// WiFi

// double strength = 1;
inline void WiFi::clear_strength() {
  strength_ = 0;
}
inline double WiFi::strength() const {
  // @@protoc_insertion_point(field_get:T7.WiFi.strength)
  return strength_;
}
inline void WiFi::set_strength(double value) {
  
  strength_ = value;
  // @@protoc_insertion_point(field_set:T7.WiFi.strength)
}

// double freq = 2;
inline void WiFi::clear_freq() {
  freq_ = 0;
}
inline double WiFi::freq() const {
  // @@protoc_insertion_point(field_get:T7.WiFi.freq)
  return freq_;
}
inline void WiFi::set_freq(double value) {
  
  freq_ = value;
  // @@protoc_insertion_point(field_set:T7.WiFi.freq)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace T7

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::T7::GenericMessage_MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::T7::GenericMessage_MsgType>() {
  return ::T7::GenericMessage_MsgType_descriptor();
}
template <> struct is_proto_enum< ::T7::Terminate_TerminateKeys> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::T7::Terminate_TerminateKeys>() {
  return ::T7::Terminate_TerminateKeys_descriptor();
}
template <> struct is_proto_enum< ::T7::ConfigData_ToggleKeys> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::T7::ConfigData_ToggleKeys>() {
  return ::T7::ConfigData_ToggleKeys_descriptor();
}
template <> struct is_proto_enum< ::T7::MoveCamera_ArrowKeys> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::T7::MoveCamera_ArrowKeys>() {
  return ::T7::MoveCamera_ArrowKeys_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_T7Messages_2eproto__INCLUDED
